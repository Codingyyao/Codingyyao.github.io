<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于GitHub Pages / Hexo / Fluid主题搭建个人博客的刨坑之路</title>
    <link href="/blog/2022/12/02/first_post/"/>
    <url>/blog/2022/12/02/first_post/</url>
    
    <content type="html"><![CDATA[<p>Firstly, welcome to <a href="https://codingyyao.github.io/">Yao’s blog</a>!</p><p>这是基于 <a href="https://hexo.io/docs/">Hexo</a> 搭建的第一个博客，有关 Hexo 的任何使用和其它问题建议参考 <a href="https://github.com/hexojs/hexo/issues">GitHub</a> 或 <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a>.</p><h2 id="博客搭建流程"><a href="#博客搭建流程" class="headerlink" title="博客搭建流程"></a>博客搭建流程</h2><h3 id="主要参考的网络资源"><a href="#主要参考的网络资源" class="headerlink" title="主要参考的网络资源"></a>主要参考的网络资源</h3><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">(1) CSDN 上的’史上最全教程’博客</a><br><a href="https://cloud.tencent.com/developer/article/1010311">(2) 腾讯云上的 win10 搭建 hexo 的博客</a></p><h3 id="基础软件安装-win10"><a href="#基础软件安装-win10" class="headerlink" title="基础软件安装 (win10)"></a>基础软件安装 (win10)</h3><p><a href="https://git-scm.com/downloads">Git</a><br><a href="https://nodejs.org/zh-cn/download/">Nodejs</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 版本检查，后面可能需要注意npm, node 和 hexo的版本兼容问题。</span><br>$ npm -v<br><span class="hljs-comment"># 配置Git账户</span><br>$ git config --global user.name <span class="hljs-string">&quot;&quot;</span><br>$ git config --global user.email <span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><h3 id="GitHub-创建仓库"><a href="#GitHub-创建仓库" class="headerlink" title="GitHub 创建仓库"></a>GitHub 创建仓库</h3><p>注意 repository 命名和 github 账号名称保持一致，在 <code>setting &gt; pages</code> 处可查看 <code>url</code> (格式：&lt;用户名&gt;.github.io)。</p><h3 id="安装-Hexo-win10"><a href="#安装-Hexo-win10" class="headerlink" title="安装 Hexo (win10)"></a>安装 Hexo (win10)</h3><p>Hexo 是一个基于 NodeJS 的静态博客网站生成器，首先需要打开 <code>cmd</code>,使用如下命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install -g hexo-cli<br><span class="hljs-comment"># 查看hexo版本</span><br>$ hexo -v<br></code></pre></td></tr></table></figure><h3 id="创建-Hexo-项目并初始化"><a href="#创建-Hexo-项目并初始化" class="headerlink" title="创建 Hexo 项目并初始化"></a>创建 Hexo 项目并初始化</h3><p>新建 blog 文件夹，作为根目录, git bash 中执行下列操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> blog<br>$ hexo init<br>$ npm install<br><br><span class="hljs-comment"># 生成web</span><br>$ hexo g<br><span class="hljs-comment"># 本地启动</span><br>$ hexo s<br></code></pre></td></tr></table></figure><p>接着，在本地的浏览器中就可访问 <a href="http://localhost:4000/">http://localhost:4000</a>, 启动 blog 页面。</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>这里使用 Fluid 主题，其它主题可参考<a href="https://hexo.io/themes/">hexo 可选主题</a><br>具体安装步骤见<a href="https://gitcode.net/mirrors/fluid-dev/hexo-theme-fluid?utm_source=csdn_github_accelerator">Fluid</a>，需要修改<code>blog</code>主目录中的文件<code>_config.yml</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 指定主题</span><br>$ theme: fluid<br><span class="hljs-comment">#指定语言</span><br>$ language: zh-CN<br></code></pre></td></tr></table></figure><p>此外，个性化页面的展示可以修改<code>_config.yml</code>中的<code>title</code>字段，博客的标题可以在主题<code>theme\fluid</code>文件夹下的<code>_config.yml</code>中的<code>blog_title</code>字段，主页正中间的文字可以修改主题<code>theme\fluid</code>文件夹下的<code>_config.yml</code>中的<code>text</code>字段，修改过后 blog 的显示内容就变成了个人信息。</p><p><img src="../images/blog_1.png" alt="Alt text" title="个性化设置后的blog页面"></p><h3 id="GitHub-远程部署"><a href="#GitHub-远程部署" class="headerlink" title="GitHub 远程部署"></a>GitHub 远程部署</h3><p>首先需要本地生成 ssh key,用于连接 github 认证，启动 <code>Git bash</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh-keygen -t rsa -C <span class="hljs-string">&quot;github注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>将生成的<code>.ssh/id_rsa.pub copy</code> 到 <code>GitHub 的 SSH keys</code> 中，进行通信。</p><p>接着，在本地编辑好 blog 之后（同样可修改<code>_config.yml</code>配置文件和<code>source&gt;_post\</code>文件夹下的 md 或 html 文件），配置个人域名和 github 部署(<code>_config.yml</code>):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>url: http://name.com<br>deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: https://github.com/name/name.github.io.git<br>  branch: master <span class="hljs-comment"># define</span><br></code></pre></td></tr></table></figure><p>最后，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g <span class="hljs-comment"># 本地生成</span><br>$ npm install hexo-deployer-git --save <span class="hljs-comment"># 安装Git插件</span><br>$ hexo d <span class="hljs-comment"># 远程部署</span><br></code></pre></td></tr></table></figure><h3 id="远程部署连接-Error-443，Error-404-等"><a href="#远程部署连接-Error-443，Error-404-等" class="headerlink" title="远程部署连接 Error 443，Error 404 等"></a>远程部署连接 Error 443，Error 404 等</h3><p>第一次执行部署时报错 443，<code>unable to access</code>,可能原因是本地 proxy 和 github 连接不上的问题, 参考一篇 <a href="https://blog.csdn.net/Reinhart_L/article/details/122471010">blog</a> 解决报错。</p><p>首先，关闭 vpn，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global --<span class="hljs-built_in">unset</span> http.proxy<br></code></pre></td></tr></table></figure><p>修改<code>_config.fml</code>文件将<code>repo</code>部分替换成<code>ssh</code>地址<code>git@github.com:name/name.github.io.git</code></p><p>接着<a href="www.ipaddress.com">查询 github ip 地址</a>，在<code>/etc/hosts</code>文件中添加<code>ip github.com</code>, 重新执行<code>hexo d</code>,即可。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
