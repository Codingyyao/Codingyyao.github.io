<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>基于obsidian的个人工作流配置指南-2</title>
    <link href="/2022/12/06/obsidian-2/"/>
    <url>/2022/12/06/obsidian-2/</url>
    
    <content type="html"><![CDATA[<blockquote><p>obsidian 工作流配置详细说明文档(插件内嵌版本)</p></blockquote><div class="row">    <embed src="基于Obsidian的个人工作流配置指南.pdf" width="100%" height="550" type="application/pdf"></div><hr><blockquote><p>obsidian 工作流配置详细说明文档 (PDFjs 版本)</p></blockquote><iframe src="/pdfjs/web/viewer.html?file=http://localhost:4000/2022/12/06/Obsidian-2/基于Obsidian的个人工作流配置指南.pdf" frameborder="0" width="100%" height="550"></iframe>]]></content>
    
    
    <categories>
      
      <category>Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>obsidian工作流</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于obsidian的个人工作流配置指南</title>
    <link href="/2022/12/06/obsidian/"/>
    <url>/2022/12/06/obsidian/</url>
    
    <content type="html"><![CDATA[<blockquote><p>想法：<code>obsidian</code> 中的双链链接在 <code>hexo</code>上无法显示，将 <code>obsidian</code> 编辑好的 <code>Markdown</code>文件直接转化成 <code>PDF</code> 格式，并将其直接插入<code>blog</code>中。</p></blockquote><h3 id="两种可内嵌-pdf-的方式">两种可内嵌 PDF 的方式</h3><blockquote><ol type="1"><li>使用插件 <code>hexo-pdf</code>, 只能在 PC 端查看 PDF 文件；</li><li>借助 PDF.js, 可以实现全平台查看 PDF 文件。</li></ol></blockquote><h4 id="借助插件内嵌-pdf">借助插件内嵌 PDF</h4><p><mark>需要修改<code>\_config.yml</code>中的<code>post_asset_folder = ture</code>,存放 PDF 的文件夹和 md文件同名。</mark></p><p>pdf 插件安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install hexo-pdf<br><span class="hljs-comment"># md 文件中 输入</span><br><span class="hljs-comment"># &#123;% pdf 基于Obsidian的个人工作流配置指南.pdf %&#125;</span><br></code></pre></td></tr></table></figure><h4 id="下载配置-pdf.js-配置冲突还未完全解决">下载配置 PDF.js(配置冲突，还未完全解决！)</h4><p>在 <a href="https://mozilla.github.io/pdf.js/">PDF.js</a> 官网下载older browsers 版本，以防兼容性问题。</p><p>修改<code>\_config.yml</code> 的 <code>skip_render</code> 选项，将<code>pdfjs</code> 文件夹去除 render。</p><p>注释掉 <code>viewer.js</code> 中以下 codes：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// if (fileOrigin !== viewerOrigin) &#123;</span><br><span class="hljs-comment">// throw new Error(&quot;file origin does not match viewer&#x27;s&quot;);</span><br><span class="hljs-comment">// &#125;</span><br></code></pre></td></tr></table></figure><p><font color="tomato" size="3">首先，需要注意文件路径的问题，折腾了好久发现是<code>\_config.yml</code>文件的 <code>url (/name.github.io/)</code> 和 <code>root (/)</code>配置的有问题，原先的配置里多写了子文件<code>(blog/)</code>,会导致使用插件的时候，生成的链接多一个<code>blog</code> 字符，从而 error!</font></p><p>以 <code>&lt;iframe&gt;</code>的形式插入 PDF文件，当前可以看见<code>viewer.html</code>实现的 pdf阅读框，但是无法加载文件。最后，在 <code>skip render</code> 中增加<code>pdfjs/**</code> 解决。<font color="tomato" size="3">发现，<code>url</code> <code>root</code> 设置和 <code>hexo d</code>不能同时满足，修改了 <code>url root</code> 之后 <code>github</code>无法部署，不修改的话，PDFjs 不工作！</font> <mark>推测可能是<code>viewer.js</code>写法有问题导致 <code>file url</code>错误？</mark></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs md"><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/pdfjs/web/viewer.html?file=http://localhost:4000/2022/12/06/Obsidian/name.pdf&quot;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;550&quot;</span>&gt;</span></span><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>obsidian工作流</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于GitHub Pages / Hexo / Fluid主题搭建个人博客的刨坑之路</title>
    <link href="/2022/12/02/first_post/"/>
    <url>/2022/12/02/first_post/</url>
    
    <content type="html"><![CDATA[<p>Firstly, welcome to <a href="https://codingyyao.github.io/">Yao'sblog</a>!</p><p>这是基于 <a href="https://hexo.io/docs/">Hexo</a>搭建的第一个博客，有关 Hexo 的任何使用和其它问题建议参考 <a href="https://github.com/hexojs/hexo/issues">GitHub</a> 或 <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a>.</p><h2 id="博客搭建流程">博客搭建流程</h2><h3 id="主要参考的网络资源">主要参考的网络资源</h3><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">(1)CSDN 上的'史上最全教程'博客</a> <a href="https://cloud.tencent.com/developer/article/1010311">(2)腾讯云上的 win10 搭建 hexo 的博客</a></p><h3 id="基础软件安装-win10">基础软件安装 (win10)</h3><p><a href="https://git-scm.com/downloads">Git</a> <a href="https://nodejs.org/zh-cn/download/">Nodejs</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 版本检查，后面可能需要注意npm, node 和 hexo的版本兼容问题。</span><br>$ npm -v<br><span class="hljs-comment"># 配置Git账户</span><br>$ git config --global user.name <span class="hljs-string">&quot;&quot;</span><br>$ git config --global user.email <span class="hljs-string">&quot;&quot;</span><br></code></pre></td></tr></table></figure><h3 id="github-创建仓库">GitHub 创建仓库</h3><p>注意 repository 命名和 github 账号名称保持一致，在<code>setting &gt; pages</code> 处可查看 <code>url</code>(格式：<用户名>.github.io)。</用户名></p><h3 id="安装-hexo-win10">安装 Hexo (win10)</h3><p>Hexo 是一个基于 NodeJS 的静态博客网站生成器，首先需要打开<code>cmd</code>,使用如下命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm install -g hexo-cli<br><span class="hljs-comment"># 查看hexo版本</span><br>$ hexo -v<br></code></pre></td></tr></table></figure><h3 id="创建-hexo-项目并初始化">创建 Hexo 项目并初始化</h3><p>新建 blog 文件夹，作为根目录, git bash 中执行下列操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> blog<br>$ hexo init<br>$ npm install<br><br><span class="hljs-comment"># 生成web</span><br>$ hexo g<br><span class="hljs-comment"># 本地启动</span><br>$ hexo s<br></code></pre></td></tr></table></figure><p>接着，在本地的浏览器中就可访问 http://localhost:4000, 启动 blog页面。</p><h3 id="更换主题">更换主题</h3><p>这里使用 Fluid 主题，其它主题可参考<a href="https://hexo.io/themes/">hexo 可选主题</a> 具体安装步骤见<a href="https://gitcode.net/mirrors/fluid-dev/hexo-theme-fluid?utm_source=csdn_github_accelerator">Fluid</a>，需要修改<code>blog</code>主目录中的文件<code>_config.yml</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 指定主题</span><br>$ theme: fluid<br><span class="hljs-comment">#指定语言</span><br>$ language: zh-CN<br></code></pre></td></tr></table></figure><p>此外，个性化页面的展示可以修改<code>_config.yml</code>中的<code>title</code>字段，博客的标题可以在主题<code>theme\fluid</code>文件夹下的<code>_config.yml</code>中的<code>blog_title</code>字段，主页正中间的文字可以修改主题<code>theme\fluid</code>文件夹下的<code>_config.yml</code>中的<code>text</code>字段，修改过后blog 的显示内容就变成了个人信息。</p><a href="https://ibb.co/VT2GKXc"><p style="text-align:center"></p><p><img src="https://i.ibb.co/BBqJ185/blog-1.png" height="500px" alt="blog-1" border="0"></p></a><p></p><h3 id="github-远程部署">GitHub 远程部署</h3><p>首先需要本地生成 ssh key,用于连接 github 认证，启动<code>Git bash</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh-keygen -t rsa -C <span class="hljs-string">&quot;github注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>将生成的<code>.ssh/id_rsa.pub copy</code> 到<code>GitHub 的 SSH keys</code> 中，进行通信。</p><p>接着，在本地编辑好 blog之后（同样可修改<code>_config.yml</code>配置文件和<code>source&gt;_post\</code>文件夹下的md 或 html 文件），配置个人域名和 github部署(<code>_config.yml</code>):</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>url: http://name.com<br>deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: https://github.com/name/name.github.io.git<br>  branch: master <span class="hljs-comment"># define</span><br></code></pre></td></tr></table></figure><p>最后，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g <span class="hljs-comment"># 本地生成</span><br>$ npm install hexo-deployer-git --save <span class="hljs-comment"># 安装Git插件</span><br>$ hexo d <span class="hljs-comment"># 远程部署</span><br></code></pre></td></tr></table></figure><h3 id="远程部署连接-error-443error-404-等">远程部署连接 Error443，Error 404 等</h3><p>第一次执行部署时报错443，<code>unable to access</code>,可能原因是本地 proxy 和 github连接不上的问题, 参考一篇 <a href="https://blog.csdn.net/Reinhart_L/article/details/122471010">blog</a>解决报错。</p><p>首先，关闭 vpn，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ git config --global --<span class="hljs-built_in">unset</span> http.proxy<br></code></pre></td></tr></table></figure><p>修改<code>_config.fml</code>文件将<code>repo</code>部分替换成<code>ssh</code>地址<code>git@github.com:name/name.github.io.git</code></p><p>接着<a href="www.ipaddress.com">查询 github ip地址</a>，在<code>/etc/hosts</code>文件中添加<code>ip github.com</code>,重新执行<code>hexo d</code>,即可。</p>]]></content>
    
    
    <categories>
      
      <category>Blogs</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo搭建blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
